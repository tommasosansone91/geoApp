vs code

direttamente nel file
html -> html:5
compila automaticamente con il codice di html 5

live server come estensione di vs code
poi clickdestro sul file per aprirlo nel browser

-------------------------------

installazione postgres e pgadmin4

seguendo
https://computingforgeeks.com/how-to-install-pgadmin-4-on-ubuntu/

"""
  110  curl  -fsSL https://www.pgadmin.org/static/packages_pgadmin_org.pub | sudo gpg --dearmor -o /etc/apt/trusted.gpg.d/pgadmin.gpg
  111  sudo sh -c 'echo "deb https://ftp.postgresql.org/pub/pgadmin/pgadmin4/apt/$(lsb_release -cs) pgadmin4 main" > /etc/apt/sources.list.d/pgadmin4.list'
  112  cat /etc/apt/sources.list.d/pgadmin4.list
  113  sudo apt update
  114  sudo apt install pgadmin4
  115  systemctl status apache2
  116  sudo /usr/pgadmin4/bin/setup-web.sh
  117  sudo ufw allow http
  118  sudo ufw allow https

"""

alla fine ho aggiunto un nuovo server

collegarsi a postgres da browser
http://localhost/pgadmin4/login?next=%2Fpgadmin4%2F

il servizio postgres viene startato naturalmente a start della machcina

name
postgres-local

username
postgres

pw
postgres

hostanme / address
127.0.0.1

port
5432

server group
Servers


inoltre ho registrato il mio utente come

tommaso.sansone91@virgilio.it
M**********91

http://localhost/pgadmin4/login?next=%2Fpgadmin4%2F

----------------------------------

il server di default è postgres

lo schema di default è public

voglio creare la estensione per postgs

tool > query tool

CREATE EXTENSION postgis

refresh schema and check table

spatial_ref_sys

select * from spatial_ref_sys

create table demo(
	id serial primary key,
	name text,
	geometric_field geometry
);

insert into demo(name, geometric_field)
values('Point', ST_GeomFromText('Point(1 1)'));

-- geometric query - can investigate it with geometry viewer
select * from public.demo;

------------------------------------------------------------

installazione geodjango

crea virtualenv in nuova cartella django

virtualenv venv

source venv/bin/activate

python3 -m pip install --upgrade pip

sudo apt install libgdal-dev
pip install GDAL==$(gdal-config --version | awk -F'[.]' '{print $1"."$2}')

pip install django==3.1.14

django-admin startproject geoApp

/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/django$ cd geoApp/
(venv) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/django/geoApp$ python manage.py runserver

ora nota che djagno è esposto sulla porta 8000
mentre leaflet sulla 5500
mentre pgadmin sulla 80 (non essendoci una porta il default è 80)...er l indirizzo è /pgadmin4/browser/
http://localhost/pgadmin4/login?next=%2Fpgadmin4%2F


changing setitng to enable settign geodjango

nb. queste saranno le credenziali del mio db postgres

DATABASES = {
    'default': {
        'ENGINE': 'django.contrib.gis.db.backends.postgis',
        # creo il db dalla interfaccia di pgadmin - db: geoapp
        'NAME': 'geoapp',
        'USER': 'postgres',
        'PASSWORD': 'password',  # ???
        'HOST': 'localhost',
        'PORT': '5432',
    }
}

nota che non ho definito la pw quando ho creato il db geoapp da pgadminho dato solo il nome.
e mi ha messo automatico owner postgres
nota la differenza tra configurazioni di server e di DATABASES

il database ha solo il nome

il server ha 
nome
username
hostname/address
pw
porta


python manage.py startapp shp

poi aggiungila in fondo alle installed_apps di settigns.py

----------------------

installare geoserver

https://docs.geoserver.org/stable/en/user/installation/linux.html

tommaso@tommaso-VirtualBox02:~$ sudo mkdir -p /usr/share/geoserver
[sudo] password for tommaso: 
tommaso@tommaso-VirtualBox02:~$ echo "export GEOSERVER_HOME=/usr/share/geoserver" >> ~/.profile
. ~/.profile

tommaso@tommaso-VirtualBox02:~$ sudo chown -R tommaso /usr/share/geoserver/

estraggo lo zip

cd /usr/share/geoserver/bin
sh startup.sh   # lo fa partire

http://localhost:8080/geoserver


credenziali di geoserver

admin
geoserver (default)



-------------------- lesson 21 -------

nuova dire geoserver-rest

serve python 3

tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/geoserver-rest$ python3 -m virtualenv venv

installo le lib in un nuovo venv

non mi serve pipwin perche uso ubuntu

installo gdal facendo direttamnete

pip install geoserver-rest==2.3.4

pip install pycurl
pip install gdal


https://pypi.org/project/geoserver-rest/



----------lezione 24-------------------

in postgres
create extension postgis;

in
(venv) /home/tommaso/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/django/geoApp
python manage.py migrate

migrate crea le tbelle in postgres che gli ho connesso

Operations to perform:
  Apply all migrations: admin, auth, contenttypes, sessions
Running migrations:
  Applying contenttypes.0001_initial... OK
  Applying auth.0001_initial... OK
  Applying admin.0001_initial... OK
  Applying admin.0002_logentry_remove_auto_add... OK
  Applying admin.0003_logentry_add_action_flag_choices... OK
  Applying contenttypes.0002_remove_content_type_name... OK
  Applying auth.0002_alter_permission_name_max_length... OK
  Applying auth.0003_alter_user_email_max_length... OK
  Applying auth.0004_alter_user_username_opts... OK
  Applying auth.0005_alter_user_last_login_null... OK
  Applying auth.0006_require_contenttypes_0002... OK
  Applying auth.0007_alter_validators_add_error_messages... OK
  Applying auth.0008_alter_user_username_max_length... OK
  Applying auth.0009_alter_user_last_name_max_length... OK
  Applying auth.0010_alter_group_name_max_length... OK
  Applying auth.0011_update_proxy_permissions... OK
  Applying auth.0012_alter_user_first_name_max_length... OK
  Applying sessions.0001_initial... OK

  (venv) tommaso@tommaso-VirtualBox02:~/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/django/geoApp$ python manage.py createsuperuser
Username (leave blank to use 'tommaso'): admin   
Email address: admin@gmail.com
Password: password
Password (again): 


muovo i file dalla cartella del frontend verso una nuova cartella static dentro geoApp del progetto geoApp
questo perche django usa il medodo static per gestire css e javascritp.
quindi devo coambiare come sono inkati in index html

index html invece l ho messo in una cattella templates che è allo stesso livello ddelle app shp e geoApp

quidi devo agigungere il django tag {% load static %} al top della pagina che linka i contenuti

poi python manage. py collectstatic
questo comando copia tutti i file messi dentro la cartell

a static in cui ci sono stile, js, ecc
dentro la staticfiles dir definita dal sistema settings di geoApp.

STATICFILES_DIRS = [ os.path.join(BASE_DIR, 'geoApp/static') ]

144 static files copied to '/home/tommaso/tommaso03/coding_projects/corsi_udemy/web-mapping-and-webgis-geodjango/django/geoApp/static'.

ora tutti  i link a una risorsa dentro static opossono essere linkati usando il tag static di django


--------------- lezione 30 ---------------------

pip install shapely
geopandas
pandas
numpy
rasterio
geoserver-rest=2.3.4
shapely
 pip install SQLAlchemy
 pycurl
 
 ------ lez 31 --------

creo i modelli dentro shp

makemigrations mi crea il file .py dentro <global_app>/<model_name>/migrations/

migrate esegue quel file e esegue le update sul db

dopo che ho lanciato migrate posso accedere a pgadmin e vedere che le tabelle del db sono state aggiornate


---------- lez 36 ----------

in postgres

create schema data;



